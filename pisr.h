/***************************************************************************//**
  @file     pisr.h
  @brief    Periodic Interrupt (RISR) driver
  @author   Nicolï¿½s Magliola
 ******************************************************************************/

#ifndef _PISR_H_
#define _PISR_H_

/*******************************************************************************
 * INCLUDE HEADER FILES
 ******************************************************************************/

/*******************************************************************************
 * CONSTANT AND MACRO DEFINITIONS USING #DEFINE
 ******************************************************************************/

#define PISR_TICKS_MS       1
#define PISR_MS2TICKS(ms)  ((ms)/PISR_TICKS_MS)


/*******************************************************************************
 * ENUMERATIONS AND STRUCTURES AND TYPEDEFS
 ******************************************************************************/

typedef void (*pisr_callback_t)(void);


/*******************************************************************************
 * VARIABLE PROTOTYPES WITH GLOBAL SCOPE
 ******************************************************************************/

/*******************************************************************************
 * FUNCTION PROTOTYPES WITH GLOBAL SCOPE
 ******************************************************************************/

/**
 * @brief Register periodic interrup callback
 * @param fun Function to be call periodically
 * @param per interrupt period, in ticks
 * @return Function registered OK
*/
char pisrRegister (pisr_callback_t fun, int per);



/*******************************************************************************
 ******************************************************************************/

#endif // _PISR_H_
